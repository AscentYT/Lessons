{
  "modules": [
    {
      "id": "module1",
      "type": "video",
      "name": "Introduction Video",
      "description": "Lesson description",
      "data": {
        "path": "https://example.com/video.mp4",
        "transcript": "transcripts/module1-transcript.md"
      }
    },
    {
      "id": "module2",
      "type": "text",
      "name": "Reading Material",
      "description": "Lesson description",
      "data": {
        "sections": [
          {
            "videoTimestamp": "00:00",
            "transcription": "look closely can you guess who this person is it feels familiar the face the posture the aura you've seen this person before but where after retrieving bits of information your brain finally comes to an answer but a computer can't rely on memories and intuition like we do it"
          },
          {
            "videoTimestamp": "00:20",
            "transcription": "only sees raw data like numbers and pixels so how can it possibly recognize a face or tell two faces apart that's where convolutional neural networks come in cnn's are a special type of neural network designed specifically to analyze images the key behind a CNN is the"
          },
          {
            "videoTimestamp": "00:37",
            "transcription": "convolutional layer but what exactly is convolution put simply convolution is a mathematical process where a small matrix called a filter slides over an image looking at one patch of the image at a time the filter is multiplied with the pixel values of the patch and then"
          },
          {
            "videoTimestamp": "00:54",
            "transcription": "summed up to produce a single number this value becomes a pixel in a special image called a feature map where certain features like edges or textures are highlighted but wait how exactly does this filter move across the image that's where stride comes in a stride of one"
          },
          {
            "videoTimestamp": "01:10",
            "transcription": "means the filter moves one pixel at a time a larger stride skips more reducing detail and the output size also to avoid shrinking the image too much we use padding adding zeros around the border so even the edges get processed after each convolutional layer the network"
          },
          {
            "videoTimestamp": "01:27",
            "transcription": "applies an activation function most commonly the relu or rectified linear unit this function introduces nonlinearity which helps the network learn more complex and varied features by transforming negative values to zero and keeping positive values unchanged to make computation more efficient CNN's"
          },
          {
            "videoTimestamp": "01:46",
            "transcription": "utilize max pooling layers after the convolutional layer pooling layers essentially pick out the maximum values from a smaller region within the feature map think of it like zooming out on a photo to get a quick summary instead of remembering every tiny detail you focus"
          },
          {
            "videoTimestamp": "01:59",
            "transcription": "on the brightest or most important spots in each section both convolutional layers and max pooling layers make up the bulk of the feature extraction phase of a CNN once relevant patterns have been found by the network it goes on to the classification phase in the"
          },
          {
            "videoTimestamp": "02:13",
            "transcription": "classification phase the data first must be flattened this is because the fully connected layers expect a one-dimensional list of numbers so the multi-dimensional data from the feature extraction phase must be reshaped or flattened into a single vector once flattened this data passes through the"
          },
          {
            "videoTimestamp": "02:31",
            "transcription": "fully connected layers which act like a traditional neural network these layers weigh and combine the extracted features to make the final prediction at the very end a special activation function often the softmax is applied to produce probabilities for each possible class"
          },
          {
            "videoTimestamp": "02:45",
            "transcription": "indicating how confident the model is for each prediction now that we know more about how CNN's work let's build one using TensorFlow and Keras we will build our model to tell the difference between a picture of Messi and Ronaldo using the data set in the description"
          },
          {
            "videoTimestamp": "03:00",
            "transcription": "below let's start by importing necessary libraries like so make sure you have both TensorFlow and pandas installed using KAS let's actually assemble our model we start off with the convolutional layer specifying our filter size and the size of the image with the input shape parameter after"
          },
          {
            "videoTimestamp": "03:16",
            "transcription": "every convolutional layer there's a max pooling layer and we can specify the size of the pooling matrix here let's repeat this process three times increasing the neuron count by a multiple of two each time so that the model can detect a range of low-level patterns like edges or highle patterns"
          },
          {
            "videoTimestamp": "03:31",
            "transcription": "like facial structure once we're done with that we can move on to the classification phase of our CNN we first start off by flattening the data and then creating a fully connected neural network using a dense layer we also add a dropout layer to randomly drop 50% of"
          },
          {
            "videoTimestamp": "03:45",
            "transcription": "the neurons in training this forces our network to not rely too much on one specific feature making it less prone to overfitting and more generalizable to new images our last layer has just two neurons to represent our two output choices and uses a softmax activation"
          },
          {
            "videoTimestamp": "04:00",
            "transcription": "function now that our model is assembled we can configure it for training using the compile method we're essentially telling the model to be training to maximize accuracy we can load in our data using the flow from directory method which assumes our images are organized in folders named after each"
          },
          {
            "videoTimestamp": "04:16",
            "transcription": "class we will also resize all the images to be 256 x 256 pixels splitting 20% for validation and loading them in batches of 32 with labels returning as integer after training we can make sure to save our model to a file so that we can load it later for making predictions without"
          },
          {
            "videoTimestamp": "04:32",
            "transcription": "retraining nice we have just created a convolutional neural network with a pretty decent accuracy"
          }
        ]
      }
    },
    {
      "id": "module3",
      "type": "quiz",
      "name": "Quiz 1",
      "description": "Lesson description",
      "data": {
        "questions": [
          {
            "prompt": "Which of the following is used to calculate the gradient during backpropogation?",
            "answerChoices": [
              "Vectors",
              "Matrices",
              "Partial derivatives",
              "Cross validation"
            ],
            "correctAnswerChoiceIndex": 2
          },
          {
            "prompt": "What is the purpose of the activation function in a neural network?",
            "answerChoices": [
              "To normalize the input data",
              "To introduce non-linearity",
              "To reduce the learning rate",
              "To initialize weights"
            ],
            "correctAnswerChoiceIndex": 1
          },
          {
            "prompt": "Which loss function is most commonly used for binary classification problems?",
            "answerChoices": [
              "Mean Squared Error",
              "Categorical Crossentropy",
              "Binary Crossentropy",
              "Hinge Loss"
            ],
            "correctAnswerChoiceIndex": 2
          },
          {
            "prompt": "What does the learning rate in gradient descent control?",
            "answerChoices": [
              "The number of hidden layers",
              "The speed at which the model learns",
              "The number of training epochs",
              "The size of the training data"
            ],
            "correctAnswerChoiceIndex": 1
          }
        ]
      }
    }
  ]
}
